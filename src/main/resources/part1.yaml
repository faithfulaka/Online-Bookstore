openapi: 3.0.1
info:
  title: Bookstore API
  description: API for managing the bookstore's inventory, available authors, and customer orders
  version: 1.0.0

servers:
  - url: http://localhost:8080

tags:
  - name: Author
    description: Everything about the author
  - name: Books
    description: Access to bookstore's books
  - name: Orders
    description: Bookstore's orders

paths:
  /authors:
    get:
      tags:
        - Author
      summary: List all authors
      responses:
        '200':
          description: Authors found
        '404':
          description: No authors found
    post:
      tags:
        - Author
      summary: Create a new author
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          description: Author created
        '409':
            description: Author already exits

  /authors/{id}:
    get:
      tags:
        - Author
      summary: Retrieve an author by their ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: New response
          content:
            application/json:
              schema:
                : 
        '200':
          description: Author found
        '404':
          description: Author not found
    put:
      tags:
        - Author
      summary: Update an existing author
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          description: Author updated
        '404':
          description: Author not updated
    delete:
      tags:
        - Author
      summary: Delete an author
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Author deleted
        '404':
          description: Author not deleted

  /authors/{id}/books:
    get:
      tags:
        - Author
      summary: List all books written by a specific author
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Books found by author
        '404':
          description: Books by author not Found

  /books:
    get:
      tags:
        - Books
      summary: List all books
      responses:
        '200':
          description: Books Found
        '404':
          description: No books found
    post:
      tags:
        - Books
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Book created
        '409':
          description: Book not created

  /books/{ISBN}:
    get:
      tags:
        - Books
      summary: Retrieve a book by ISBN
      parameters:
        - in: path
          name: ISBN
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Book found
        '404':
          description: Book not found
    put:
      tags:
        - Books
      summary: Update an existing book
      parameters:
        - in: path
          name: ISBN
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Book updated
        '404':
          description: Book not updated
    delete:
      tags:
        - Books
      summary: Delete a book
      parameters:
        - in: path
          name: ISBN
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Book deleted
        '404':
          description: Book not deleted

  /books/{ISBN}/authors:
    get:
      tags:
        - Books
      summary: List all authors of a book
      parameters:
        - in: path
          name: ISBN
          required: true
          schema:
            type: string
      responses:
        '200':
          description: All authors of the Book
        '404':
          description: No Authors of this Book are listed

  /books/{ISBN}/orders:
    get:
      tags:
        - Books
      summary: List all orders containing a specific book
      parameters:
        - in: path
          name: ISBN
          required: true
          schema:
            type: string
      responses:
        '200':
          description: All orders with the book
        '404':
          description: There are no orders with this book

  /orders:
    get:
      tags:
        - Orders
      summary: List all orders
      responses:
        '200':
          description: Orders found
        '404':
          description: No orders found
    post:
      tags:
        - Orders
      summary: Create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Order made
        '409':
          description: Order not made

  /orders/{id}:
    get:
      tags:
        - Orders
      summary: Retrieve an order by its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order found
        '404':
          description: Order not found
    put:
      tags:
        - Orders
      summary: Update an existing order
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Order updated
        '404':
          description: Order not updated

  /orders/{id}/books:
    get:
      tags:
        - Orders
      summary: List all books in an order
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order Found
        '404':
          description: No books found in the order

  /orders/{id}/books/{ISBN}:
    post:
      tags:
        - Orders
      summary: Add a book to an existing order
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: path
          name: ISBN
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Books added to the order
        '409':
          description: No book found in this order
    delete:
      tags:
        - Orders
      summary: Remove a book from an existing order
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: path
          name: ISBN
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Book removed from the order
        '404':
          description: No book was removed from this order

components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        birthyear:
          type: integer
        nationality:
          type: string

    Book:
      type: object
      properties:
        ISBN:
          type: string
        title:
          type: string
        publicationYear:
          type: integer
        price:
          type: number

    Order:
      type: object
      properties:
        id:
          type: integer
        datetime:
          type: string
          format: date-time
        customerName:
          type: string

