/*
 * Bookstore API
 * API for managing the bookstore's inventory, available authors, and customer orders
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Book;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BooksApi
 */
@Disabled
public class BooksApiTest {

    private final BooksApi api = new BooksApi();

    /**
     * List all books
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void booksGetTest() throws ApiException {
        api.booksGet();
        // TODO: test validations
    }

    /**
     * List all authors of a book
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void booksISBNAuthorsGetTest() throws ApiException {
        String ISBN = null;
        api.booksISBNAuthorsGet(ISBN);
        // TODO: test validations
    }

    /**
     * Delete a book
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void booksISBNDeleteTest() throws ApiException {
        String ISBN = null;
        api.booksISBNDelete(ISBN);
        // TODO: test validations
    }

    /**
     * Retrieve a book by ISBN
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void booksISBNGetTest() throws ApiException {
        String ISBN = null;
        api.booksISBNGet(ISBN);
        // TODO: test validations
    }

    /**
     * List all orders containing a specific book
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void booksISBNOrdersGetTest() throws ApiException {
        String ISBN = null;
        api.booksISBNOrdersGet(ISBN);
        // TODO: test validations
    }

    /**
     * Update an existing book
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void booksISBNPutTest() throws ApiException {
        String ISBN = null;
        Book book = null;
        api.booksISBNPut(ISBN, book);
        // TODO: test validations
    }

    /**
     * Create a new book
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void booksPostTest() throws ApiException {
        Book book = null;
        api.booksPost(book);
        // TODO: test validations
    }

}
